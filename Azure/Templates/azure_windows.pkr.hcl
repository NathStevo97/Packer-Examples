variable "az-subscription-id" {
  type = string
  default = env("azSubId")
}

variable "az-client-id" {
  type = string
  default = env("azClientId")
}

variable "az-client-secret" {
  type = string
  default = env("azClientSecret")
}

variable "az-tenant-id" {
  type = string
  default = env("azTenantId")
}

variable "az-managed-rg" {
  type = string
  default = env("azPackerRG")
}


source "azure-arm" "autogenerated_1" {
  azure_tags = {
    dept = "Engineering"
    task = "Image deployment"
  }
  build_resource_group_name         = "Packer-Test-RG"
  client_id                         = "${var.az-client-id}"
  client_secret                     = "${var.az-client-secret}"
  communicator                      = "winrm"
  image_offer                       = "WindowsServer"
  image_publisher                   = "MicrosoftWindowsServer"
  image_sku                         = "2016-Datacenter"
  managed_image_name                = "myPackerImage"
  managed_image_resource_group_name = "${var.az-managed-rg}"
  os_type                           = "Windows"
  subscription_id                   = "${var.az-subscription-id}"
  tenant_id                         = "${var.az-tenant-id}"
  vm_size                           = "Standard_D2_v2"
  winrm_insecure                    = true
  winrm_timeout                     = "5m"
  winrm_use_ssl                     = true
  winrm_username                    = "packer"
}

build {
  sources = ["source.azure-arm.autogenerated_1"]

  provisioner "powershell" {
    inline = ["Add-WindowsFeature Web-Server", "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }", "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit", "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"]
  }

}
